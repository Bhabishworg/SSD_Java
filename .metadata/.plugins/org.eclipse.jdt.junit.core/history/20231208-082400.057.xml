<?xml version="1.0" encoding="UTF-8"?><testrun name="TriangleTest" project="General" tests="27" started="27" failures="1" errors="0" ignored="0">
  <testsuite name="lab4.TriangleTest" time="0.063" displayname="TriangleTest" uniqueid="[engine:junit-jupiter]/[class:lab4.TriangleTest]">
    <testsuite name="isScaleneTest(lab4.TriangleTest)" time="0.0" displayname="isScaleneTest(int, int, int)" parameters="int,int,int" uniqueid="[engine:junit-jupiter]/[class:lab4.TriangleTest]/[test-template:isScaleneTest(int, int, int)]">
      <testcase name="isScaleneTest" classname="lab4.TriangleTest" time="0.0" dynamicTest="true" displayname="[1] 10, 20, 30" parameters="int,int,int" uniqueid="[engine:junit-jupiter]/[class:lab4.TriangleTest]/[test-template:isScaleneTest(int, int, int)]/[test-template-invocation:#1]"/>
      <testcase name="isScaleneTest" classname="lab4.TriangleTest" time="0.0" dynamicTest="true" displayname="[2] 10, 30, 20" parameters="int,int,int" uniqueid="[engine:junit-jupiter]/[class:lab4.TriangleTest]/[test-template:isScaleneTest(int, int, int)]/[test-template-invocation:#2]"/>
      <testcase name="isScaleneTest" classname="lab4.TriangleTest" time="0.0" dynamicTest="true" displayname="[3] 20, 10, 30" parameters="int,int,int" uniqueid="[engine:junit-jupiter]/[class:lab4.TriangleTest]/[test-template:isScaleneTest(int, int, int)]/[test-template-invocation:#3]"/>
      <testcase name="isScaleneTest" classname="lab4.TriangleTest" time="0.0" dynamicTest="true" displayname="[4] 20, 30, 10" parameters="int,int,int" uniqueid="[engine:junit-jupiter]/[class:lab4.TriangleTest]/[test-template:isScaleneTest(int, int, int)]/[test-template-invocation:#4]"/>
      <testcase name="isScaleneTest" classname="lab4.TriangleTest" time="0.002" dynamicTest="true" displayname="[5] -20, 20, 10" parameters="int,int,int" uniqueid="[engine:junit-jupiter]/[class:lab4.TriangleTest]/[test-template:isScaleneTest(int, int, int)]/[test-template-invocation:#5]">
        <failure>
          <expected>true</expected>
          <actual>false</actual>
          org.opentest4j.AssertionFailedError: expected: &lt;true&gt; but was: &lt;false&gt;&#13;
	at org.junit.jupiter.api.AssertionFailureBuilder.build(AssertionFailureBuilder.java:151)&#13;
	at org.junit.jupiter.api.AssertionFailureBuilder.buildAndThrow(AssertionFailureBuilder.java:132)&#13;
	at org.junit.jupiter.api.AssertTrue.failNotTrue(AssertTrue.java:63)&#13;
	at org.junit.jupiter.api.AssertTrue.assertTrue(AssertTrue.java:36)&#13;
	at org.junit.jupiter.api.AssertTrue.assertTrue(AssertTrue.java:31)&#13;
	at org.junit.jupiter.api.Assertions.assertTrue(Assertions.java:179)&#13;
	at lab4.TriangleTest.isScaleneTest(TriangleTest.java:35)&#13;
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)&#13;
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)&#13;
	at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)&#13;
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)&#13;
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)&#13;
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)&#13;
&#13;

        </failure>
      </testcase>
    </testsuite>
    <testsuite name="setSidesTest(lab4.TriangleTest)" time="0.003" displayname="setSidesTest(int)" parameters="int" uniqueid="[engine:junit-jupiter]/[class:lab4.TriangleTest]/[test-template:setSidesTest(int)]">
      <testcase name="setSidesTest" classname="lab4.TriangleTest" time="0.003" dynamicTest="true" displayname="[1] 10" parameters="int" uniqueid="[engine:junit-jupiter]/[class:lab4.TriangleTest]/[test-template:setSidesTest(int)]/[test-template-invocation:#1]"/>
      <testcase name="setSidesTest" classname="lab4.TriangleTest" time="0.0" dynamicTest="true" displayname="[2] 30" parameters="int" uniqueid="[engine:junit-jupiter]/[class:lab4.TriangleTest]/[test-template:setSidesTest(int)]/[test-template-invocation:#2]"/>
      <testcase name="setSidesTest" classname="lab4.TriangleTest" time="0.001" dynamicTest="true" displayname="[3] 20" parameters="int" uniqueid="[engine:junit-jupiter]/[class:lab4.TriangleTest]/[test-template:setSidesTest(int)]/[test-template-invocation:#3]"/>
    </testsuite>
    <testsuite name="setSidesTest(lab4.TriangleTest)" time="0.004" displayname="setSidesTest(int, int)" parameters="int,int" uniqueid="[engine:junit-jupiter]/[class:lab4.TriangleTest]/[test-template:setSidesTest(int, int)]">
      <testcase name="setSidesTest" classname="lab4.TriangleTest" time="0.004" dynamicTest="true" displayname="[1] 10, 20" parameters="int,int" uniqueid="[engine:junit-jupiter]/[class:lab4.TriangleTest]/[test-template:setSidesTest(int, int)]/[test-template-invocation:#1]"/>
      <testcase name="setSidesTest" classname="lab4.TriangleTest" time="0.001" dynamicTest="true" displayname="[2] 20, 10" parameters="int,int" uniqueid="[engine:junit-jupiter]/[class:lab4.TriangleTest]/[test-template:setSidesTest(int, int)]/[test-template-invocation:#2]"/>
    </testsuite>
    <testsuite name="setSidesTest(lab4.TriangleTest)" time="0.001" displayname="setSidesTest(int, int, int)" parameters="int,int,int" uniqueid="[engine:junit-jupiter]/[class:lab4.TriangleTest]/[test-template:setSidesTest(int, int, int)]">
      <testcase name="setSidesTest" classname="lab4.TriangleTest" time="0.001" dynamicTest="true" displayname="[1] 10, 20, 30" parameters="int,int,int" uniqueid="[engine:junit-jupiter]/[class:lab4.TriangleTest]/[test-template:setSidesTest(int, int, int)]/[test-template-invocation:#1]"/>
      <testcase name="setSidesTest" classname="lab4.TriangleTest" time="0.001" dynamicTest="true" displayname="[2] 10, 30, 20" parameters="int,int,int" uniqueid="[engine:junit-jupiter]/[class:lab4.TriangleTest]/[test-template:setSidesTest(int, int, int)]/[test-template-invocation:#2]"/>
      <testcase name="setSidesTest" classname="lab4.TriangleTest" time="0.001" dynamicTest="true" displayname="[3] 20, 10, 30" parameters="int,int,int" uniqueid="[engine:junit-jupiter]/[class:lab4.TriangleTest]/[test-template:setSidesTest(int, int, int)]/[test-template-invocation:#3]"/>
      <testcase name="setSidesTest" classname="lab4.TriangleTest" time="0.0" dynamicTest="true" displayname="[4] 20, 30, 10" parameters="int,int,int" uniqueid="[engine:junit-jupiter]/[class:lab4.TriangleTest]/[test-template:setSidesTest(int, int, int)]/[test-template-invocation:#4]"/>
    </testsuite>
    <testsuite name="isEquilateralTest(lab4.TriangleTest)" time="0.001" displayname="isEquilateralTest(int, int, int)" parameters="int,int,int" uniqueid="[engine:junit-jupiter]/[class:lab4.TriangleTest]/[test-template:isEquilateralTest(int, int, int)]">
      <testcase name="isEquilateralTest" classname="lab4.TriangleTest" time="0.001" dynamicTest="true" displayname="[1] 10, 10, 10" parameters="int,int,int" uniqueid="[engine:junit-jupiter]/[class:lab4.TriangleTest]/[test-template:isEquilateralTest(int, int, int)]/[test-template-invocation:#1]"/>
      <testcase name="isEquilateralTest" classname="lab4.TriangleTest" time="0.001" dynamicTest="true" displayname="[2] 20, 20, 20" parameters="int,int,int" uniqueid="[engine:junit-jupiter]/[class:lab4.TriangleTest]/[test-template:isEquilateralTest(int, int, int)]/[test-template-invocation:#2]"/>
      <testcase name="isEquilateralTest" classname="lab4.TriangleTest" time="0.0" dynamicTest="true" displayname="[3] 30, 30, 30" parameters="int,int,int" uniqueid="[engine:junit-jupiter]/[class:lab4.TriangleTest]/[test-template:isEquilateralTest(int, int, int)]/[test-template-invocation:#3]"/>
      <testcase name="isEquilateralTest" classname="lab4.TriangleTest" time="0.001" dynamicTest="true" displayname="[4] -10, -10, -10" parameters="int,int,int" uniqueid="[engine:junit-jupiter]/[class:lab4.TriangleTest]/[test-template:isEquilateralTest(int, int, int)]/[test-template-invocation:#4]"/>
    </testsuite>
    <testsuite name="isIsoscelesTest(lab4.TriangleTest)" time="0.001" displayname="isIsoscelesTest(int, int, int)" parameters="int,int,int" uniqueid="[engine:junit-jupiter]/[class:lab4.TriangleTest]/[test-template:isIsoscelesTest(int, int, int)]">
      <testcase name="isIsoscelesTest" classname="lab4.TriangleTest" time="0.001" dynamicTest="true" displayname="[1] 30, 20, 20" parameters="int,int,int" uniqueid="[engine:junit-jupiter]/[class:lab4.TriangleTest]/[test-template:isIsoscelesTest(int, int, int)]/[test-template-invocation:#1]"/>
      <testcase name="isIsoscelesTest" classname="lab4.TriangleTest" time="0.0" dynamicTest="true" displayname="[2] 20, 30, 20" parameters="int,int,int" uniqueid="[engine:junit-jupiter]/[class:lab4.TriangleTest]/[test-template:isIsoscelesTest(int, int, int)]/[test-template-invocation:#2]"/>
      <testcase name="isIsoscelesTest" classname="lab4.TriangleTest" time="0.001" dynamicTest="true" displayname="[3] 20, 20, 30" parameters="int,int,int" uniqueid="[engine:junit-jupiter]/[class:lab4.TriangleTest]/[test-template:isIsoscelesTest(int, int, int)]/[test-template-invocation:#3]"/>
      <testcase name="isIsoscelesTest" classname="lab4.TriangleTest" time="0.001" dynamicTest="true" displayname="[4] -20, -20, 30" parameters="int,int,int" uniqueid="[engine:junit-jupiter]/[class:lab4.TriangleTest]/[test-template:isIsoscelesTest(int, int, int)]/[test-template-invocation:#4]"/>
      <testcase name="isIsoscelesTest" classname="lab4.TriangleTest" time="0.0" dynamicTest="true" displayname="[5] 20, 20, -30" parameters="int,int,int" uniqueid="[engine:junit-jupiter]/[class:lab4.TriangleTest]/[test-template:isIsoscelesTest(int, int, int)]/[test-template-invocation:#5]"/>
    </testsuite>
  </testsuite>
  <testsuite name="lab4.TriangleTest" time="0.009" displayname="TriangleTest" uniqueid="[engine:junit-vintage]/[runner:lab4.TriangleTest]">
    <testcase name="constructorTest" classname="lab4.TriangleTest" time="0.007" displayname="constructorTest" uniqueid="[engine:junit-vintage]/[runner:lab4.TriangleTest]/[test:constructorTest(lab4.TriangleTest)]"/>
    <testcase name="getAverageLengthTest" classname="lab4.TriangleTest" time="0.001" displayname="getAverageLengthTest" uniqueid="[engine:junit-vintage]/[runner:lab4.TriangleTest]/[test:getAverageLengthTest(lab4.TriangleTest)]"/>
    <testcase name="copyTest" classname="lab4.TriangleTest" time="0.0" displayname="copyTest" uniqueid="[engine:junit-vintage]/[runner:lab4.TriangleTest]/[test:copyTest(lab4.TriangleTest)]"/>
    <testcase name="getPerimeterTest" classname="lab4.TriangleTest" time="0.0" displayname="getPerimeterTest" uniqueid="[engine:junit-vintage]/[runner:lab4.TriangleTest]/[test:getPerimeterTest(lab4.TriangleTest)]"/>
  </testsuite>
</testrun>
